from odoo import http
from odoo.http import request, Response
import json
from datetime import date, datetime
import logging
from .authentication import authenticate_user, cors_response

_logger = logging.getLogger(__name__)

def date_handler(obj):
    if isinstance(obj, (date, datetime)):
        return obj.isoformat()
    raise TypeError("Type not serializable")

class ManufacturingOrders(http.Controller):
    @http.route('/api/manufacturing_orders', type='http', auth='none', methods=['GET'], csrf=False)
    def get_manufacturing_orders(self, **kwargs):
        try:
            # Authentication
            auth_header = request.httprequest.headers.get('Authorization')
            if not auth_header:
                return cors_response(Response(json.dumps({'error': 'Missing Authorization header'}), 
                                        content_type='application/json', status=401))
            try:
                user = authenticate_user(auth_header)
            except Exception as e:
                return cors_response(Response(json.dumps({'error': 'Authentication failed', 'details': str(e)}), 
                                        content_type='application/json', status=401))
            
            mo_records = request.env['mrp.production'].sudo().search([])
            mo_data = []
            
            for mo in mo_records:
                product = mo.product_id
                sale = mo.shipment_sale_line_id
                lot_number = mo.lot_producing_id.name if mo.lot_producing_id else None
                


                order_data = {
                    'manufacturing_order_reference': mo.name,
                    'product_name': product.name,
                    'product_code': product.default_code or '',
                    'category': product.categ_id.name or '',
                    'quantity_to_produce': mo.product_qty,
                    'bom_id': mo.bom_id.id,
                    'origin': mo.origin,
                    'unit_of_measure': mo.product_uom_id.name,
                    'Customer' : mo.mrp_partner_id.name,
                    'lot_serial_number': lot_number,
                    'state': mo.state,
                    'Sale Order Line' : sale.order_id.name,
                }
                mo_data.append(order_data)

            return cors_response(Response(
                json.dumps(mo_data, default=date_handler),
                content_type='application/json'
            ))

        except ValueError as ve:
            return cors_response(Response(
                json.dumps({'error': str(ve)}),
                content_type='application/json',
                status=401
            ))
        except Exception as e:
            _logger.error(f"Error in get_manufacturing_orders: {str(e)}", exc_info=True)
            return cors_response(Response(
                json.dumps({'error': 'Internal server error'}),
                content_type='application/json',
                status=500
            ))
